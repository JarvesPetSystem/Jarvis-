/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.jarves.formularios;

import br.com.jarves.bancodedados.AgendaServicoDAO;
import br.com.jarves.bancodedados.ClienteDAO;
import br.com.jarves.classes.AgendaServico;
import br.com.jarves.classes.Cliente;
import br.com.jarves.classes.TableFormat;
import br.com.jarves.classes.Util;
import static br.com.jarves.formularios.jifAgendaServico.cpf;
import br.com.jarves.util.Global;
import java.awt.Dimension;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
//import net.proteanit.sql.DbUtils;

/**
 *
 * @author Humberto
 */
public class JifConAgendaServico extends javax.swing.JInternalFrame {

    /**
     * Creates new form jifConEnd
     */
    public JifConAgendaServico() {
        initComponents();
        carregaLista();
        jftCpf.setVisible(false);
        
        //jtbEndereco.setModel(DbUtils.resultSetToTableModel(EnderecoDAO.listarEnderecos()));
    }
   
    public int flag =0;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgpPesquisar = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jlbNome = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jbtVoltar = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jpnDados = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbAgenda = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtbEndCli = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtbConCli = new javax.swing.JTable();
        jftCpf = new javax.swing.JFormattedTextField();
        jrbNome = new javax.swing.JRadioButton();
        jrbCpf = new javax.swing.JRadioButton();
        jtfRga = new javax.swing.JTextField();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        setTitle("Consulta Agendamento");
        getContentPane().setLayout(null);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Consulta Agenda de Serviços"));
        jPanel2.setLayout(null);

        jlbNome.setText("RGA:");
        jPanel2.add(jlbNome);
        jlbNome.setBounds(30, 40, 80, 30);
        jPanel2.add(jSeparator1);
        jSeparator1.setBounds(10, 130, 760, 20);

        jbtVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/jarves/icones/voltar.png.jpg"))); // NOI18N
        jbtVoltar.setText("Voltar");
        jbtVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtVoltarActionPerformed(evt);
            }
        });
        jPanel2.add(jbtVoltar);
        jbtVoltar.setBounds(640, 30, 100, 40);

        jpnDados.setLayout(null);

        jtbAgenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtbAgenda.setToolTipText("Lista de Endereços");
        jtbAgenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbAgendaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbAgenda);

        jpnDados.add(jScrollPane1);
        jScrollPane1.setBounds(20, 10, 700, 140);

        jTabbedPane1.addTab("Informações Pessoais", jpnDados);

        jPanel1.setLayout(null);

        jtbEndCli.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtbEndCli.setToolTipText("Lista de Endereços");
        jScrollPane2.setViewportView(jtbEndCli);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(20, 10, 700, 140);

        jTabbedPane1.addTab("Endereço", jPanel1);

        jPanel3.setLayout(null);

        jtbConCli.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtbConCli.setToolTipText("Lista de Endereços");
        jScrollPane3.setViewportView(jtbConCli);

        jPanel3.add(jScrollPane3);
        jScrollPane3.setBounds(20, 10, 700, 140);

        jTabbedPane1.addTab("Contato", jPanel3);

        jPanel2.add(jTabbedPane1);
        jTabbedPane1.setBounds(10, 140, 760, 190);

        try {
            jftCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jftCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jftCpfActionPerformed(evt);
            }
        });
        jftCpf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jftCpfKeyReleased(evt);
            }
        });
        jPanel2.add(jftCpf);
        jftCpf.setBounds(70, 40, 120, 30);

        bgpPesquisar.add(jrbNome);
        jrbNome.setSelected(true);
        jrbNome.setText("RGA");
        jrbNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbNomeActionPerformed(evt);
            }
        });
        jPanel2.add(jrbNome);
        jrbNome.setBounds(40, 90, 93, 23);

        bgpPesquisar.add(jrbCpf);
        jrbCpf.setText("CPF");
        jrbCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbCpfActionPerformed(evt);
            }
        });
        jPanel2.add(jrbCpf);
        jrbCpf.setBounds(130, 90, 45, 23);

        jtfRga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfRgaActionPerformed(evt);
            }
        });
        jtfRga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfRgaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfRgaKeyTyped(evt);
            }
        });
        jPanel2.add(jtfRga);
        jtfRga.setBounds(70, 40, 120, 30);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 0, 780, 340);

        setBounds(0, 0, 791, 377);
    }// </editor-fold>//GEN-END:initComponents

    private void jbtVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtVoltarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbtVoltarActionPerformed

    private void jrbNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbNomeActionPerformed
       jftCpf.setVisible(false);
       jtfRga.setVisible(true);
       jtfRga.grabFocus();
       jlbNome.setText("Nome: ");
       jtfRga.setText("");
       carregaLista();
    }//GEN-LAST:event_jrbNomeActionPerformed

    private void jrbCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbCpfActionPerformed
        jtfRga.setVisible(false);
        jftCpf.setVisible(true);
        jftCpf.grabFocus();
        jftCpf.setText("");
        jlbNome.setText("CPF:");
        carregaLista();
    }//GEN-LAST:event_jrbCpfActionPerformed

    private void jftCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jftCpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jftCpfActionPerformed

    private void jftCpfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jftCpfKeyReleased
        if(jftCpf.getText().trim().length()==14){
            filtraLista();
            
        }else{
            carregaLista();
        }
    }//GEN-LAST:event_jftCpfKeyReleased

    private void jtbAgendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbAgendaMouseClicked
        if(evt.getClickCount()>1){
            if (flag ==1){
                int indiceLinha = jtbAgenda.getSelectedRow();
                Object cliente = jtbAgenda.getValueAt(indiceLinha, 0);
                Object cpf = jtbAgenda.getValueAt(indiceLinha, 1);
                Global.jtfCliente.setText(cliente.toString());
                Global.cpf.setText("CPF: "+cpf.toString()); 
                jifCadAnimal.cpf = cpf.toString();
                Global.jtfCliente.grabFocus();
                flag =0;
                this.dispose();
            }
                
            
          
        }
    }//GEN-LAST:event_jtbAgendaMouseClicked

    private void jtfRgaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfRgaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfRgaActionPerformed

    private void jtfRgaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfRgaKeyReleased

        if(jtfRga.getText().length()>0)
        filtraLista();
        else
        carregaLista();
    }//GEN-LAST:event_jtfRgaKeyReleased

    private void jtfRgaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfRgaKeyTyped
        String caracteres="0987654321";
        if(!caracteres.contains(evt.getKeyChar()+"")){
            evt.consume();
        }
    }//GEN-LAST:event_jtfRgaKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgpPesquisar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbtVoltar;
    private javax.swing.JFormattedTextField jftCpf;
    private javax.swing.JLabel jlbNome;
    private javax.swing.JPanel jpnDados;
    private javax.swing.JRadioButton jrbCpf;
    private javax.swing.JRadioButton jrbNome;
    private javax.swing.JTable jtbAgenda;
    private javax.swing.JTable jtbConCli;
    private javax.swing.JTable jtbEndCli;
    private javax.swing.JTextField jtfRga;
    // End of variables declaration//GEN-END:variables

    /**
     * Método para alinhar o internal frame no meio da tela
     */
    public void setPosicao() {  
        Dimension d = this.getDesktopPane().getSize();  
        this.setLocation((d.width - this.getSize().width) / 2, 0);
    }
    
    
    /**
     * Método que filtra a lista de clientes
     */
    public void filtraLista(){
        Util u = new Util();
        
        String cpf ="";
        String rga = "";
        String tituloagendamento[] = {"Cod Agend","Nome","RGA", "Serviço","Data","Hora","Status","Proprietario"};
        String tituloendereco[] = {"Nome","Endereço","N°","Complemento","CEP"};
        String titulocontato[]  = {"Nome","Telefone","Celular","Email","Observações" };
        
        Object dados [][]={};
             
        DefaultTableModel modelo = new DefaultTableModel(dados,tituloagendamento){
             public boolean isCellEditable(int row,int column){
                return false;
            }
        };
        DefaultTableModel ender  = new DefaultTableModel(dados,tituloendereco){
             public boolean isCellEditable(int row,int column){
                return false;
            }
        
        };
        DefaultTableModel contat = new DefaultTableModel(dados,titulocontato){
             public boolean isCellEditable(int row,int column){
                return false;
            }
        
        };
        
        jtbAgenda.setDefaultRenderer(Object.class,new TableFormat());
        jtbAgenda.setModel(modelo);
        
        jtbEndCli.setDefaultRenderer(Object.class,new TableFormat());
        jtbEndCli.setModel(ender);
        
        
        jtbConCli.setDefaultRenderer(Object.class,new TableFormat());
        jtbConCli.setModel(contat);
       
        
        if(jftCpf.getText().trim().length()>11){
           cpf = u.formataCpf(jftCpf.getText().trim());
        }
        if(jtfRga.getText().trim().length()>0){
            rga = jtfRga.getText().trim()+"%";
        }
        ArrayList<AgendaServico> lista = new AgendaServicoDAO().pesquisarAgenda(cpf,rga); 
               
        for(int i = 0;i<lista.size();i++){
            modelo.addRow(new Object[]{lista.get(i).getIdAgendaServico(),lista.get(i).getAnimal().getNome(),
            lista.get(i).getAnimal().getIdAnimal(),lista.get(i).getServico().getNomeServico(),lista.get(i).getDataAgendaServico(),lista.get(i).getHoraAgendaServico()
            ,lista.get(i).getStatusAgendaServico(),lista.get(i).getCliente().getNomeCliente()});
            
            ender.addRow(new Object[]{lista.get(i).getCliente().getNomeCliente(),lista.get(i).getEndereco().getNomeRua(),
                                      lista.get(i).getEndereco().getNumero(),lista.get(i).getEndereco().getComplemento(),
                                       u.reformataCep(lista.get(i).getEndereco().getCep())});
        
            contat.addRow(new Object[]{lista.get(i).getCliente().getNomeCliente(),lista.get(i).getContato().getTelefone(),
                                      lista.get(i).getContato().getCelular(),lista.get(i).getContato().getCelular(),lista.get(i).getContato().getObs()});
        }
        
    }
    
    
    
    public void carregaLista(){
        Util u = new Util();
        
        
        String tituloagendamento[] = {"Codigo","Nome","RGA", "Serviço","Data","Hora","Status","Proprietario"};
        String tituloendereco[] = {"Nome","Endereço","N°","Complemento","CEP"};
        String titulocontato[]  = {"Nome","Telefone","Celular","Email","Observações" };
        
        Object dados [][]={};
             
        DefaultTableModel modelo = new DefaultTableModel(dados,tituloagendamento){
         public boolean isCellEditable(int row,int column){
                return false;
            }
        };
        DefaultTableModel ender  = new DefaultTableModel(dados,tituloendereco){
            public boolean isCellEditable(int row,int column){
                return false;
            }
        };
        DefaultTableModel contat = new DefaultTableModel(dados,titulocontato){
            public boolean isCellEditable(int row,int column){
                return false;
            }
        };
        jtbAgenda.setDefaultRenderer(Object.class,new TableFormat());
        jtbAgenda.setModel(modelo);
        
        jtbEndCli.setDefaultRenderer(Object.class,new TableFormat());
        jtbEndCli.setModel(ender);
        
        
        jtbConCli.setDefaultRenderer(Object.class,new TableFormat());
        jtbConCli.setModel(contat);
       
        
        
       
        
        ArrayList<AgendaServico> lista = new AgendaServicoDAO().listarAgenda(); 
               
        for(int i = 0;i<lista.size();i++){
            modelo.addRow(new Object[]{lista.get(i).getIdAgendaServico(),lista.get(i).getAnimal().getNome(),
            lista.get(i).getAnimal().getIdAnimal(),lista.get(i).getServico().getNomeServico(),lista.get(i).getDataAgendaServico(),lista.get(i).getHoraAgendaServico()
            ,lista.get(i).getStatusAgendaServico(),lista.get(i).getCliente().getNomeCliente()});
            
            ender.addRow(new Object[]{lista.get(i).getCliente().getNomeCliente(),lista.get(i).getEndereco().getNomeRua(),
                                      lista.get(i).getEndereco().getNumero(),lista.get(i).getEndereco().getComplemento(),
                                       u.reformataCep(lista.get(i).getEndereco().getCep())});
        
            contat.addRow(new Object[]{lista.get(i).getCliente().getNomeCliente(),lista.get(i).getContato().getTelefone(),
                                      lista.get(i).getContato().getCelular(),lista.get(i).getContato().getCelular(),lista.get(i).getContato().getObs()});
        }
        
    }
    
    
    
}

