/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.jarves.formularios;

import br.com.jarves.bancodedados.AgendaServicoDAO;
import br.com.jarves.bancodedados.AnimalDAO;
import br.com.jarves.bancodedados.ClienteDAO;
import br.com.jarves.bancodedados.ServicoDAO;
import br.com.jarves.classes.AgendaServico;
import br.com.jarves.classes.Animal;
import br.com.jarves.classes.Cliente;
import br.com.jarves.classes.Servico;
import br.com.jarves.classes.TableFormat;
import br.com.jarves.classes.Util;
import br.com.jarves.util.Global;
import java.awt.Dimension;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Humberto
 */
public class jifAgendaServico extends javax.swing.JInternalFrame {
    
    public static String cpf;
    int idAgendaServico =0 ;
    public jifAgendaServico() {
        initComponents();
        carregaServico();
        Global.jtfRga = txtRgaAnimal;
        Global.jtfProprietario = lblProprietario;
        jbtAlterar.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jbtVoltar = new javax.swing.JButton();
        jbtGravar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbAgenServico = new javax.swing.JTable();
        jdcDataAgen = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jcbServico = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        txtRgaAnimal = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtHora = new javax.swing.JTextField();
        jcbStatus = new javax.swing.JComboBox();
        jblCpf = new javax.swing.JLabel();
        lblProprietario = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jbtAlterar = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        setTitle("Registro de Agendamento");
        getContentPane().setLayout(null);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Agendamento de Serviços"));
        jPanel2.setLayout(null);

        jbtVoltar.setText("Voltar");
        jbtVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtVoltarActionPerformed(evt);
            }
        });
        jPanel2.add(jbtVoltar);
        jbtVoltar.setBounds(520, 110, 100, 40);

        jbtGravar.setText("Gravar");
        jbtGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtGravarActionPerformed(evt);
            }
        });
        jPanel2.add(jbtGravar);
        jbtGravar.setBounds(520, 50, 100, 40);
        jPanel2.add(jSeparator1);
        jSeparator1.setBounds(20, 240, 600, 10);

        jtbAgenServico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtbAgenServico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbAgenServicoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbAgenServico);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(20, 310, 600, 140);

        jdcDataAgen.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jdcDataAgenPropertyChange(evt);
            }
        });
        jPanel2.add(jdcDataAgen);
        jdcDataAgen.setBounds(120, 60, 160, 30);

        jLabel1.setText("Data");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(70, 70, 23, 14);

        jLabel2.setText("Serviço:");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(60, 130, 40, 14);

        jcbServico.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione..." }));
        jcbServico.setToolTipText("Selecione o Serviço");
        jcbServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbServicoActionPerformed(evt);
            }
        });
        jPanel2.add(jcbServico);
        jcbServico.setBounds(120, 120, 160, 30);

        jLabel3.setText("RGA do Animal:");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(30, 190, 80, 14);
        jPanel2.add(txtRgaAnimal);
        txtRgaAnimal.setBounds(120, 180, 160, 30);

        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });
        jPanel2.add(btnPesquisar);
        btnPesquisar.setBounds(300, 180, 30, 30);

        jLabel4.setText("Hora:");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(340, 70, 27, 14);

        jLabel5.setText("Status:");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(330, 130, 40, 14);
        jPanel2.add(txtHora);
        txtHora.setBounds(380, 60, 110, 30);

        jcbStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione...", "Em Andamento", "Cancelado", "Finalizado" }));
        jPanel2.add(jcbStatus);
        jcbStatus.setBounds(380, 120, 110, 30);
        jPanel2.add(jblCpf);
        jblCpf.setBounds(120, 24, 150, 20);

        lblProprietario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel2.add(lblProprietario);
        lblProprietario.setBounds(460, 180, 130, 30);

        jLabel6.setText("Proprietario:");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(360, 190, 60, 14);

        jbtAlterar.setText("Alterar");
        jbtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAlterarActionPerformed(evt);
            }
        });
        jPanel2.add(jbtAlterar);
        jbtAlterar.setBounds(520, 30, 100, 40);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 0, 630, 500);

        setBounds(0, 0, 646, 540);
    }// </editor-fold>//GEN-END:initComponents

    private void jtbAgenServicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbAgenServicoMouseClicked
        if(evt.getClickCount()>1){
            int indiceLinha = jtbAgenServico.getSelectedRow();
            idAgendaServico = (int)jtbAgenServico.getValueAt(indiceLinha, 0);
            Object cate = jtbAgenServico.getValueAt(indiceLinha, 2);
            txtRgaAnimal.setText(cate.toString());
            Object cate1 = jtbAgenServico.getValueAt(indiceLinha, 5);
            txtHora.setText(cate1.toString());
            Object cate2 = jtbAgenServico.getValueAt(indiceLinha, 3);
            jcbServico.setSelectedItem(cate2.toString());           
            Object cate3 = jtbAgenServico.getValueAt(indiceLinha, 6);
            jcbStatus.setSelectedItem(cate3.toString());
            Object cate4 = jtbAgenServico.getValueAt(indiceLinha, 7);
            lblProprietario.setText(cate4.toString());
            jbtGravar.setVisible(false);
            jbtAlterar.setVisible(true);
        }
    }//GEN-LAST:event_jtbAgenServicoMouseClicked

    private void jbtVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtVoltarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbtVoltarActionPerformed

    private void jbtGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtGravarActionPerformed
      if (validaCampos()){
            
            Util u = new Util();
            AgendaServicoDAO asd = new AgendaServicoDAO();
            AgendaServico agendaservico = new AgendaServico();
            Animal animal = new Animal();
            Servico servico = new Servico();
            try {
                agendaservico.setDataAgendaServico(u.data(jdcDataAgen.getDate()));
            } catch (ParseException ex) {
                Logger.getLogger(jifCadClie.class.getName()).log(Level.SEVERE, null, ex);
            }
            servico.setNomeServico(jcbServico.getSelectedItem().toString().toLowerCase());
            animal.setIdAnimal(Integer.parseInt(txtRgaAnimal.getText()));
            agendaservico.setHoraAgendaServico(txtHora.getText().trim());
            agendaservico.setStatusAgendaServico(jcbStatus.getSelectedItem().toString());
            agendaservico.setAnimal(animal);
            agendaservico.setServico(servico);
            JOptionPane.showMessageDialog(null, asd.insereAgendaServico(agendaservico));
            carregaLista();
            
            txtRgaAnimal.setText("");
            txtHora.setText("");
            lblProprietario.setText("");
            jcbStatus.setSelectedItem("Selecione...");
            jcbServico.setSelectedItem("Selecione...");
            jdcDataAgen.setDate(null);
            jdcDataAgen.grabFocus();

            
        }

         
        
        

    }//GEN-LAST:event_jbtGravarActionPerformed

    private void jdcDataAgenPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jdcDataAgenPropertyChange
        Date d = new Date();
        Util u = new Util();
          System.out.println(jdcDataAgen.getDate());
        if (jdcDataAgen.getDate()!= null){
            if (jdcDataAgen.getDate().before(d)) {
            JOptionPane.showMessageDialog(null, "Data de agendamento Não Pode Ser Inferior a Data Atual");
             jdcDataAgen.setDate(null);
            }else{
               
            carregaLista();
        }
            
        }
    }//GEN-LAST:event_jdcDataAgenPropertyChange

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        JifConAnimal jica = new JifConAnimal();
        Global.jdpPrincipal.add(jica);
        ((BasicInternalFrameUI) jica.getUI()).setNorthPane(null);
        jica.setPosicao();
        jica.flag = 2;
        jica.setVisible(true);
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void jcbServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbServicoActionPerformed
        
    }//GEN-LAST:event_jcbServicoActionPerformed

    private void jbtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAlterarActionPerformed
        if (validaCampos()){
            
            Util u = new Util();
            AgendaServicoDAO asd = new AgendaServicoDAO();
            AgendaServico agendaservico = new AgendaServico();
            Animal animal = new Animal();
            Servico servico = new Servico();
            agendaservico.setIdAgendaServico(idAgendaServico);
            try {
                agendaservico.setDataAgendaServico(u.data(jdcDataAgen.getDate()));
            } catch (ParseException ex) {
                Logger.getLogger(jifAgendaServico.class.getName()).log(Level.SEVERE, null, ex);
            }
            servico.setNomeServico(jcbServico.getSelectedItem().toString().toLowerCase());
            animal.setIdAnimal(Integer.parseInt(txtRgaAnimal.getText()));
            agendaservico.setHoraAgendaServico(txtHora.getText().trim());
            agendaservico.setStatusAgendaServico(jcbStatus.getSelectedItem().toString());
            agendaservico.setAnimal(animal);
            agendaservico.setServico(servico);
            JOptionPane.showMessageDialog(null, asd.alteraAgendaServico(agendaservico));
            
            
            carregaLista();
            jbtGravar.setVisible(true);
            jbtAlterar.setVisible(false);
            txtRgaAnimal.setText("");
            txtHora.setText("");
            jcbStatus.setSelectedItem("Selecione...");
            jcbServico.setSelectedItem("Selecione...");
            jdcDataAgen.setDate(null);
            jdcDataAgen.grabFocus();

            
        }
    }//GEN-LAST:event_jbtAlterarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel jblCpf;
    private javax.swing.JButton jbtAlterar;
    private javax.swing.JButton jbtGravar;
    private javax.swing.JButton jbtVoltar;
    private javax.swing.JComboBox jcbServico;
    private javax.swing.JComboBox jcbStatus;
    private com.toedter.calendar.JDateChooser jdcDataAgen;
    private javax.swing.JTable jtbAgenServico;
    private javax.swing.JLabel lblProprietario;
    private javax.swing.JTextField txtHora;
    private javax.swing.JTextField txtRgaAnimal;
    // End of variables declaration//GEN-END:variables

    /**
     * Método para alinhar o internal frame no meio da tela
     */
    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, 0);
    }
    
    
    
    public void carregaServico(){
                    
        ArrayList<Servico> lista = new ServicoDAO().listarServico();
        
        for(Servico lista1 : lista){
            jcbServico.addItem(lista1.getNomeServico());
            
        }
        
        }
    
    

    /**
     * Método para alimentar lista de categorias
     */
    public void carregaLista() {

        String tituloagendamento[] = {"Codigo","Nome","RGA", "Serviço","Data","Hora","Status","Proprietario"};

        Object dados[][] = {};

        DefaultTableModel modelo = new DefaultTableModel(dados, tituloagendamento) {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        
        

        jtbAgenServico.setDefaultRenderer(Object.class, new TableFormat());
        jtbAgenServico.setModel(modelo);
Util u = new Util();
       SimpleDateFormat f = new SimpleDateFormat("dd/MM/yy"); 
        ArrayList<AgendaServico> lista = new AgendaServicoDAO().RecebeData(f.format((jdcDataAgen.getDate())));
        for (AgendaServico lista2 : lista) {
            
            lista2.getIdAgendaServico();
            modelo.addRow(new Object[]{lista2.getIdAgendaServico(),lista2.getAnimal().getNome(),lista2.getAnimal().getIdAnimal(),lista2.getServico().getNomeServico(),
            u.reformataData(lista2.getDataAgendaServico()), lista2.getHoraAgendaServico(), lista2.getStatusAgendaServico(),lista2.getCliente().getNomeCliente()
            });
        
        }
    
               
        
    }  
        public boolean validaCampos() {

         boolean retorno = false;

        Date d = new Date();
       
        
        if (jdcDataAgen.getDate()==null) {
            JOptionPane.showMessageDialog(null, "Por Favor Selecione uma Data"); 
           
       }else  if (jcbServico.getSelectedIndex()==0) {
            JOptionPane.showMessageDialog(null, "Por Favor Selecione um Serviço");
            
        }else if (txtRgaAnimal.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null, "Por Favor Informe o RGA do Animal");
            
        } else if (txtHora.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null, "Por Favor Informe a Hora do Agendamento ");
        } else if (jcbStatus.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null, "Por Favor Selecione o Status");
        } else{
        
        retorno = true;
    }
return retorno;
}
        
        
}